[[connecting]]
=== Connecting

The {java-client} is structured around three main components:

* **API client classes**. These provide strongly typed data structures and 
methods for {es} APIs. Since the {es} API is large, it is structured in feature 
groups (also called “namespaces”), each having its own client class. {es} core 
features are implemented in the `ElasticsearchClient` class.
* **A JSON object mapper**. This maps your application classes to JSON and 
seamlessly integrates them with the API client.
* **A transport layer implementation**. This is where all HTTP request handling 
takes place.

This code snippet creates and wires together these three components:

["source","java"]
--------------------------------------------------
include-tagged::{doc-tests-src}/getting_started/ConnectingTest.java[create-client]
--------------------------------------------------

Authentication is managed by the <<java-rest-low>>. For further details on 
configuring authentication, refer to 
{java-api-client}/_basic_authentication.html[its documentation].

[discrete]
==== Your first request

The code snippet below searches all items from a “product” index whose name 
matches “bicycle” and return them as instances of a `Product` application class.

It illustrates the use of fluent functional builders to write search queries as 
concise DSL-like code. This pattern is explained in more detail in 
<<api-conventions>>.

["source","java"]
--------------------------------------------------
include-tagged::{doc-tests-src}/getting_started/ConnectingTest.java[first-request]
--------------------------------------------------

{doc-tests-blurb}
